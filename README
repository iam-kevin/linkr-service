# Linkr

Self-managed / hostable link shortening service

## About

This is a simple, hostable service that provides simple utilities for link redirection.

> This is to help provide the functions needed for my own project, but if it helps the next guy, well nice. Also, trying to not burn out by doing something else

## How it looks like

- Created by known entities
- Links are intended for public use
- Links can expire
- N/A links go to a 404 page
- Links can be recycled
- Links can have a namespace
- Links should be short
- Only redirects as GET

## Shortened URL anatomy

The anatomy of the URL to be shortened

`http(s?)://[domain]/([namespace]/)?[unique-path]`

_`namespace` is optional_

## How to use

### 1. Create the link, as such 

**Request**

```bash
POST https://examp.le/v1/api/create
-d '{
        "redirect_url": "https://www.youtube.com/watch?v=dQw4w9WgXcQ",
        "namespace": "d",
        "expires_in": "12d" # link expiration duration
    }' # will request as GET
-h Authorization: Bearer <my-linkr-token> # makes sure that the one creating the link, can
-h Linkr-Forward-Something: Else # forwards the header to the redirecting url
-h Linkr-Digest: <some-payload-digest>
```

**Response**

```bash
201 Created

{
    "url": "https://examp.le/v00qDJvyc",
    "identifier": "v00qDJvyc",
    "namespace": null,
    "expires_at": "2024-05-09 02:09:42",
    "expires_in_seconds": 1036800
    "created_at": "2024-04-26 02:09:42",
}
```

### 2. Use link

```bash
https://examp.le/v00qDJvyc # after 12 days from creation time, this is invalidated and will return 404
```

## TODO:

- [x] Authenticate + authorize requests made to `/v1/api/*`
- [x] Create functions to seed database with initial user + global namespace
- [ ] Rate limiting to `/v1/api/*` routes
